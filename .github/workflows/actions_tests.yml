# Note: auto-generated by `_gen_workflows.py`
name: Actions Tests
'on':
  push:
    branches:
    - master
    - wip
    paths:
    - actions/**
    - .github/workflows/actions_tests.yml
    - devutils/**
    - sema4ai-http-helper/**
  pull_request:
    branches:
    - master
    paths:
    - actions/**
    - .github/workflows/actions_tests.yml
    - devutils/**
    - sema4ai-http-helper/**
defaults:
  run:
    working-directory: ./actions
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name:
        - ubuntu-py3.10-devmode
        - windows-py3.10-devmode
        - macos-py3.10-devmode
        include:
        - name: ubuntu-py3.10-devmode
          python: '3.10'
          os: ubuntu-20.04
        - name: windows-py3.10-devmode
          python: '3.10'
          os: windows-2019
        - name: macos-py3.10-devmode
          os: macos-15
          python: '3.10'
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v3
    - name: Install the latest version of uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
    - name: Install Python 3.12
      run: uv python install 3.12
    - name: Install devutils requirements
      run: uv run --no-project --break-system-packages --python ${{ matrix.python
        }} -m pip install -r ../devutils/requirements.txt
    - name: Install project (not dev)
      if: contains(matrix.name, '-devmode') == false
      run: uv run --no-project --python ${{ matrix.python }} inv install
    - name: Install project (dev)
      if: contains(matrix.name, '-devmode')
      run: uv run --no-project --python ${{ matrix.python }} inv devinstall
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        registry-url: https://npm.pkg.github.com
        scope: '@robocorp'
    - name: Test
      env:
        GITHUB_ACTIONS_MATRIX_NAME: ${{ matrix.name }}
        CI_CREDENTIALS: ${{ secrets.CI_CREDENTIALS }}
        CI_ENDPOINT: ${{ secrets.CI_ENDPOINT }}
        ACTION_SERVER_TEST_ACCESS_CREDENTIALS: ${{ secrets.ACTION_SERVER_TEST_ACCESS_CREDENTIALS
          }}
        ACTION_SERVER_TEST_HOSTNAME: ${{ secrets.ACTION_SERVER_TEST_HOSTNAME }}
      run: uv run --no-project --python ${{ matrix.python }} inv test
    - name: '`inv lint`, potentially fixed with `inv pretty`'
      if: always()
      run: '

        uv run --no-project --python ${{ matrix.python }} inv lint

        '
    - name: '`inv typecheck`'
      if: always()
      run: '

        uv run --no-project --python ${{ matrix.python }} inv typecheck

        '
    - name: '`inv docs` with checking on files changed'
      if: always()
      run: '

        uv run --no-project --python ${{ matrix.python }} inv docs --check

        '
