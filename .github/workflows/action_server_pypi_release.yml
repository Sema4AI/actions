# Important!!
# This file is auto-generated by running:
#
#   python _gen_workflows.py
#
# Do not edit it directly, your changes will be lost!
# Instead, edit `_gen_workflows.py` with the required
# changes and rerun that script (or manually change
# this file, but before the final version
# make sure that you update the `_gen_workflows.py`
# script to match the changes you made here
# and rerun the script).


name: Action Server PYPI Release
'on':
  push:
    tags:
    - sema4ai-action_server-*
    branches:
    - '*-beta'
defaults:
  run:
    working-directory: ./action_server
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        name:
        - ubuntu-py3.12
        include:
        - name: ubuntu-py3.12
          python: '3.12'
          os: ubuntu-22.04
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v3
    - name: Install the latest version of uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
    - name: Install Python 3.12
      run: uv python install 3.12
    - name: Install devutils requirements
      run: uv run --no-project --python ${{ matrix.python }}  python -m pip install
        --break-system-packages -r ../devutils/requirements.txt
    - name: Install project (not dev)
      if: contains(matrix.name, '-devmode') == false
      run: uv run --no-project --python ${{ matrix.python }} inv install
      env:
        ACTION_SERVER_SKIP_DOWNLOAD_IN_BUILD: 'true'
    - name: Install project (dev)
      if: contains(matrix.name, '-devmode')
      run: uv run --no-project --python ${{ matrix.python }} inv devinstall
      env:
        ACTION_SERVER_SKIP_DOWNLOAD_IN_BUILD: 'true'
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        registry-url: https://npm.pkg.github.com
        scope: '@robocorp'
    - name: Check tag version
      run: uv run --no-project --python ${{ matrix.python }} poetry run inv check-tag-version
      if: ${{ !endsWith(github.ref_name, '-beta') }}
    - name: Build frontend
      run: uv run --no-project --python ${{ matrix.python }} inv build-frontend
      env:
        CI: true
        NODE_AUTH_TOKEN: ${{ secrets.GH_PAT_READ_PACKAGES }}
    - name: Build OAuth2 config
      run: uv run --no-project --python ${{ matrix.python }} inv build-oauth2-config
      env:
        GH_TOKEN: ${{ secrets.GH_PAT_GHA_TO_ANOTHER_REPO }}
    - name: Build sdist
      run: '

        # Make sure that we have no binaries present when doing the build.

        rm src/sema4ai/bin/rcc* -f

        # Just sdist here, wheels are built in the manylinux job.

        uv run --no-project --python ${{ matrix.python }} poetry build -f sdist

        '
      env:
        CI: true
        NODE_AUTH_TOKEN: ${{ secrets.GH_PAT_READ_PACKAGES }}
        GH_TOKEN: ${{ secrets.GH_PAT_GHA_TO_ANOTHER_REPO }}
        ACTION_SERVER_SKIP_DOWNLOAD_IN_BUILD: true
    - name: 'Upload artifact: action_server/dist/*'
      uses: actions/upload-artifact@v4
      with:
        name: action-server-dist
        path: action_server/dist/*
    - name: Upload to PyPI
      run: '

        uv run --no-project --python ${{ matrix.python }} poetry config pypi-token.pypi  ${
        secrets.PYPI_TOKEN_SEMA4AI_ACTION_SERVER }

        uv run --no-project --python ${{ matrix.python }} poetry publish

        '
      env:
        ACTION_SERVER_SKIP_DOWNLOAD_IN_BUILD: true
      if: ${{ !endsWith(github.ref_name, '-beta') }}


# Important!!
# This file is auto-generated by running:
#
#   python _gen_workflows.py
#
# Do not edit it directly, your changes will be lost!
# Instead, edit `_gen_workflows.py` with the required
# changes and rerun that script (or manually change
# this file, but before the final version
# make sure that you update the `_gen_workflows.py`
# script to match the changes you made here
# and rerun the script).

